In this lesson, we will create a Jenkins Pipeline to deploy out a Swarm service.

In the Jenkins dashboard, click New Item Enter an item name of PipelinePart2, and select Pipeline. Click Ok.

Check the box for This project is parameterized. Click Add Parameter and select Choice Parameter. Give it a Name of action. For Choices, enter Deploy and Destroy, and make sure they are on separate lines. Enter The action that will be executed as the Description.

Click Add Parameter and select Choice Parameter again. This time, name it image_name. Enter ghost:latest and ghost:alpine in the Choices box, making sure they are on separate lines. Enter The image Ghost Blog will deploy as a Description.

Click Add Parameter a third time, and select String Parameter. Give it a Name of ghost_ext_port. Set the Default Value to 80. Enter The Public Port as the Description.

Down in the Pipeline section, give a Definition of Pipeline script, and add the following to the Script:

node {
  git 'https://github.com/satyensingh/terraform-docker-service.git'
  if(action == 'Deploy') {
    stage('init') {
      sh label: 'terraform init', script: "terraform init"
    }
    stage('plan') {
      sh label: 'terraform plan', script: "terraform plan -out=tfplan -input=false -var image_name=${image_name} -var ghost_ext_port=${ghost_ext_port}"
      script {
          timeout(time: 10, unit: 'MINUTES') {
            input(id: "Deploy Gate", message: "Deploy environment?", ok: 'Deploy')
          }
      }
    }
    stage('apply') {
      sh label: 'terraform apply', script: "terraform apply -lock=false -input=false tfplan"
    }
  }

  if(action == 'Destroy') {
    stage('plan_destroy') {
      sh label: 'terraform plan', script: "terraform plan -destroy -out=tfdestroyplan -input=false -var image_name=${image_name} -var ghost_ext_port=${ghost_ext_port}"
    }
    stage('destroy') {
      script {
          timeout(time: 10, unit: 'MINUTES') {
              input(id: "Destroy Gate", message: "Destroy environment?", ok: 'Destroy')
          }
      }
      sh label: 'terraform apply', script: "terraform apply -lock=false -input=false tfdestroyplan"
    }
    stage('cleanup') {
      sh label: 'cleanup', script: "rm -rf terraform.tfstat"
    }
  }
}
Click Save

----------------------------------------------------------------------------

For ghost:latest and action:Deploy


Started by user Admin
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/PipelinePart2
[Pipeline] {
[Pipeline] git
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/satyensingh/terraform-docker-service.git
 > git init /var/jenkins_home/workspace/PipelinePart2 # timeout=10
Fetching upstream changes from https://github.com/satyensingh/terraform-docker-service.git
 > git --version # timeout=10
 > git fetch --tags --progress -- https://github.com/satyensingh/terraform-docker-service.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/satyensingh/terraform-docker-service.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/satyensingh/terraform-docker-service.git # timeout=10
Fetching upstream changes from https://github.com/satyensingh/terraform-docker-service.git
 > git fetch --tags --progress -- https://github.com/satyensingh/terraform-docker-service.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision 237ec2d067e96787f73c94af3de6fab44b4f5791 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 237ec2d067e96787f73c94af3de6fab44b4f5791 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master 237ec2d067e96787f73c94af3de6fab44b4f5791 # timeout=10
Commit message: "Create volumes.tf"
First time build. Skipping changelog.
[Pipeline] stage
[Pipeline] { (init)
[Pipeline] sh (terraform init)
+ terraform init

[0m[1mInitializing provider plugins...[0m
- Checking for available provider plugins on https://releases.hashicorp.com...
- Downloading plugin for provider "docker" (2.6.0)...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.docker: version = "~> 2.6"

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (plan)
[Pipeline] sh (terraform plan)
+ terraform plan -out=tfplan -input=false -var image_name=ghost:latest -var ghost_ext_port=80
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[32m  [32m+[0m [32mdocker_network.private_bridge_network
[0m      id:                                                              <computed>
      driver:                                                          "overlay"
      internal:                                                        "true"
      ipam_config.#:                                                   <computed>
      ipam_driver:                                                     "default"
      name:                                                            "ghost_mysql_internal_network"
      options.%:                                                       <computed>
      scope:                                                           <computed>
[0m
[0m[32m  [32m+[0m [32mdocker_network.public_bridge_network
[0m      id:                                                              <computed>
      driver:                                                          "overlay"
      internal:                                                        <computed>
      ipam_config.#:                                                   <computed>
      ipam_driver:                                                     "default"
      name:                                                            "ghost_public_network"
      options.%:                                                       <computed>
      scope:                                                           <computed>
[0m
[0m[32m  [32m+[0m [32mdocker_service.ghost-service
[0m      id:                                                              <computed>
      endpoint_spec.#:                                                 "1"
      endpoint_spec.0.mode:                                            <computed>
      endpoint_spec.0.ports.#:                                         "1"
      endpoint_spec.0.ports.367439312.name:                            ""
      endpoint_spec.0.ports.367439312.protocol:                        "tcp"
      endpoint_spec.0.ports.367439312.publish_mode:                    "ingress"
      endpoint_spec.0.ports.367439312.published_port:                  "80"
      endpoint_spec.0.ports.367439312.target_port:                     "2368"
      labels.%:                                                        <computed>
      mode.#:                                                          <computed>
      name:                                                            "ghost"
      task_spec.#:                                                     "1"
      task_spec.0.container_spec.#:                                    "1"
      task_spec.0.container_spec.0.dns_config.#:                       <computed>
      task_spec.0.container_spec.0.env.%:                              "5"
      task_spec.0.container_spec.0.env.database__client:               "mysql"
      task_spec.0.container_spec.0.env.database__connection__database: "ghost"
      task_spec.0.container_spec.0.env.database__connection__host:     "db"
      task_spec.0.container_spec.0.env.database__connection__password: "P4sSw0rd0!"
      task_spec.0.container_spec.0.env.database__connection__user:     "root"
      task_spec.0.container_spec.0.healthcheck.#:                      <computed>
      task_spec.0.container_spec.0.image:                              "ghost:alpine"
      task_spec.0.container_spec.0.isolation:                          "default"
      task_spec.0.container_spec.0.stop_grace_period:                  <computed>
      task_spec.0.force_update:                                        <computed>
      task_spec.0.networks.#:                                          "2"
      task_spec.0.networks.294353802:                                  "ghost_mysql_internal_network"
      task_spec.0.networks.3196439181:                                 "ghost_public_network"
      task_spec.0.placement.#:                                         <computed>
      task_spec.0.resources.#:                                         <computed>
      task_spec.0.restart_policy.%:                                    <computed>
      task_spec.0.runtime:                                             <computed>
[0m
[0m[32m  [32m+[0m [32mdocker_service.mysql-service
[0m      id:                                                              <computed>
      endpoint_spec.#:                                                 <computed>
      labels.%:                                                        <computed>
      mode.#:                                                          <computed>
      name:                                                            "db"
      task_spec.#:                                                     "1"
      task_spec.0.container_spec.#:                                    "1"
      task_spec.0.container_spec.0.dns_config.#:                       <computed>
      task_spec.0.container_spec.0.env.%:                              "1"
      task_spec.0.container_spec.0.env.MYSQL_ROOT_PASSWORD:            "P4sSw0rd0!"
      task_spec.0.container_spec.0.healthcheck.#:                      <computed>
      task_spec.0.container_spec.0.image:                              "mysql:5.7"
      task_spec.0.container_spec.0.isolation:                          "default"
      task_spec.0.container_spec.0.mounts.#:                           "1"
      task_spec.0.container_spec.0.mounts.3183614171.bind_options.#:   "0"
      task_spec.0.container_spec.0.mounts.3183614171.read_only:        ""
      task_spec.0.container_spec.0.mounts.3183614171.source:           "ghost_mysql_data"
      task_spec.0.container_spec.0.mounts.3183614171.target:           "/var/lib/mysql"
      task_spec.0.container_spec.0.mounts.3183614171.tmpfs_options.#:  "0"
      task_spec.0.container_spec.0.mounts.3183614171.type:             "volume"
      task_spec.0.container_spec.0.mounts.3183614171.volume_options.#: "0"
      task_spec.0.container_spec.0.stop_grace_period:                  <computed>
      task_spec.0.force_update:                                        <computed>
      task_spec.0.networks.#:                                          "1"
      task_spec.0.networks.294353802:                                  "ghost_mysql_internal_network"
      task_spec.0.placement.#:                                         <computed>
      task_spec.0.resources.#:                                         <computed>
      task_spec.0.restart_policy.%:                                    <computed>
      task_spec.0.runtime:                                             <computed>
[0m
[0m[32m  [32m+[0m [32mdocker_volume.mysql_data_volume
[0m      id:                                                              <computed>
      driver:                                                          <computed>
      mountpoint:                                                      <computed>
      name:                                                            "ghost_mysql_data"
[0m
[0m
[0m[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

This plan was saved to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"

[Pipeline] script
[Pipeline] {
[Pipeline] timeout
Timeout set to expire in 10 min
[Pipeline] {
[Pipeline] input
Deploy environment?
Deploy or Abort
Approved by Admin
[Pipeline] }
[Pipeline] // timeout
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (apply)
[Pipeline] sh (terraform apply)
+ terraform apply -lock=false -input=false tfplan
[0m[1mdocker_network.public_bridge_network: Creating...[0m
  driver:        "" => "overlay"
  internal:      "" => "<computed>"
  ipam_config.#: "" => "<computed>"
  ipam_driver:   "" => "default"
  name:          "" => "ghost_public_network"
  options.%:     "" => "<computed>"
  scope:         "" => "<computed>"[0m
[0m[1mdocker_network.private_bridge_network: Creating...[0m
  driver:        "" => "overlay"
  internal:      "" => "true"
  ipam_config.#: "" => "<computed>"
  ipam_driver:   "" => "default"
  name:          "" => "ghost_mysql_internal_network"
  options.%:     "" => "<computed>"
  scope:         "" => "<computed>"[0m
[0m[1mdocker_volume.mysql_data_volume: Creating...[0m
  driver:     "" => "<computed>"
  mountpoint: "" => "<computed>"
  name:       "" => "ghost_mysql_data"[0m
[0m[1mdocker_volume.mysql_data_volume: Creation complete after 0s (ID: ghost_mysql_data)[0m[0m
[0m[1mdocker_network.public_bridge_network: Creation complete after 3s (ID: vrhpgi5offtlg86abiqhn1z5p)[0m[0m
[0m[1mdocker_network.private_bridge_network: Creation complete after 3s (ID: 9050z52w2eomaogs7wam0oee2)[0m[0m
[0m[1mdocker_service.ghost-service: Creating...[0m
  endpoint_spec.#:                                                 "" => "1"
  endpoint_spec.0.mode:                                            "" => "<computed>"
  endpoint_spec.0.ports.#:                                         "" => "1"
  endpoint_spec.0.ports.367439312.name:                            "" => ""
  endpoint_spec.0.ports.367439312.protocol:                        "" => "tcp"
  endpoint_spec.0.ports.367439312.publish_mode:                    "" => "ingress"
  endpoint_spec.0.ports.367439312.published_port:                  "" => "80"
  endpoint_spec.0.ports.367439312.target_port:                     "" => "2368"
  labels.%:                                                        "" => "<computed>"
  mode.#:                                                          "" => "<computed>"
  name:                                                            "" => "ghost"
  task_spec.#:                                                     "" => "1"
  task_spec.0.container_spec.#:                                    "" => "1"
  task_spec.0.container_spec.0.dns_config.#:                       "" => "<computed>"
  task_spec.0.container_spec.0.env.%:                              "" => "5"
  task_spec.0.container_spec.0.env.database__client:               "" => "mysql"
  task_spec.0.container_spec.0.env.database__connection__database: "" => "ghost"
  task_spec.0.container_spec.0.env.database__connection__host:     "" => "db"
  task_spec.0.container_spec.0.env.database__connection__password: "" => "P4sSw0rd0!"
  task_spec.0.container_spec.0.env.database__connection__user:     "" => "root"
  task_spec.0.container_spec.0.healthcheck.#:                      "" => "<computed>"
  task_spec.0.container_spec.0.image:                              "" => "ghost:alpine"
  task_spec.0.container_spec.0.isolation:                          "" => "default"
  task_spec.0.container_spec.0.stop_grace_period:                  "" => "<computed>"
  task_spec.0.force_update:                                        "" => "<computed>"
  task_spec.0.networks.#:                                          "" => "2"
  task_spec.0.networks.294353802:                                  "" => "ghost_mysql_internal_network"
  task_spec.0.networks.3196439181:                                 "" => "ghost_public_network"
  task_spec.0.placement.#:                                         "" => "<computed>"
  task_spec.0.resources.#:                                         "" => "<computed>"
  task_spec.0.restart_policy.%:                                    "" => "<computed>"
  task_spec.0.runtime:                                             "" => "<computed>"[0m
[0m[1mdocker_service.mysql-service: Creating...[0m
  endpoint_spec.#:                                                 "" => "<computed>"
  labels.%:                                                        "" => "<computed>"
  mode.#:                                                          "" => "<computed>"
  name:                                                            "" => "db"
  task_spec.#:                                                     "" => "1"
  task_spec.0.container_spec.#:                                    "" => "1"
  task_spec.0.container_spec.0.dns_config.#:                       "" => "<computed>"
  task_spec.0.container_spec.0.env.%:                              "" => "1"
  task_spec.0.container_spec.0.env.MYSQL_ROOT_PASSWORD:            "" => "P4sSw0rd0!"
  task_spec.0.container_spec.0.healthcheck.#:                      "" => "<computed>"
  task_spec.0.container_spec.0.image:                              "" => "mysql:5.7"
  task_spec.0.container_spec.0.isolation:                          "" => "default"
  task_spec.0.container_spec.0.mounts.#:                           "" => "1"
  task_spec.0.container_spec.0.mounts.3183614171.bind_options.#:   "" => "0"
  task_spec.0.container_spec.0.mounts.3183614171.read_only:        "" => ""
  task_spec.0.container_spec.0.mounts.3183614171.source:           "" => "ghost_mysql_data"
  task_spec.0.container_spec.0.mounts.3183614171.target:           "" => "/var/lib/mysql"
  task_spec.0.container_spec.0.mounts.3183614171.tmpfs_options.#:  "" => "0"
  task_spec.0.container_spec.0.mounts.3183614171.type:             "" => "volume"
  task_spec.0.container_spec.0.mounts.3183614171.volume_options.#: "" => "0"
  task_spec.0.container_spec.0.stop_grace_period:                  "" => "<computed>"
  task_spec.0.force_update:                                        "" => "<computed>"
  task_spec.0.networks.#:                                          "" => "1"
  task_spec.0.networks.294353802:                                  "" => "ghost_mysql_internal_network"
  task_spec.0.placement.#:                                         "" => "<computed>"
  task_spec.0.resources.#:                                         "" => "<computed>"
  task_spec.0.restart_policy.%:                                    "" => "<computed>"
  task_spec.0.runtime:                                             "" => "<computed>"[0m
[0m[1mdocker_service.ghost-service: Creation complete after 6s (ID: r9hg90p1m4ufz6asjc4cvgd5o)[0m[0m
[0m[1mdocker_service.mysql-service: Creation complete after 6s (ID: i2ytjowvlep8pelntdsp5fcn5)[0m[0m
[0m[1m[32m
Apply complete! Resources: 5 added, 0 changed, 0 destroyed.[0m
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
-------------------------------------

ubuntu@ip-172-31-38-20:~$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
r9hg90p1m4uf        ghost               replicated          1/1                 ghost:alpine        *:80->2368/tcp


